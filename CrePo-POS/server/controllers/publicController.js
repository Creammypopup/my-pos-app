import asyncHandler from 'express-async-handler';
import Product from '../models/Product.js';
import CustomerOrder from '../models/CustomerOrder.js';
import sendNotification from '../services/notificationService.js';

// @desc    Fetch all products for public view
// @route   GET /api/public/products
// @access  Public
const getPublicProducts = asyncHandler(async (req, res) => {
    // ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ field ‡∏ó‡∏µ‡πà‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏´‡πâ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
    const products = await Product.find({}).select('name sku category description units image productType');
    res.json(products);
});

// @desc    Create a new customer order
// @route   POST /api/public/orders
// @access  Public
const createCustomerOrder = asyncHandler(async (req, res) => {
    const { customerInfo, items, totalAmount, deliveryMethod, shippingAddress } = req.body;

    if (!customerInfo || !items || items.length === 0) {
        res.status(400);
        throw new Error('‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå');
    }

    const order = new CustomerOrder({
        customerInfo,
        items,
        totalAmount,
        deliveryMethod,
        shippingAddress,
        paymentStatus: 'pending', // ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ñ‡∏∑‡∏≠‡∏£‡∏≠‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
        orderStatus: 'new'
    });

    const createdOrder = await order.save();

    // Send notification to store owner
    const message = `üéâ ‡∏°‡∏µ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà!\n‡∏à‡∏≤‡∏Å: ${customerInfo.name}\n‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: ${items.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£\n‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: ${totalAmount.toLocaleString()} ‡∏ö‡∏≤‡∏ó`;
    await sendNotification(message);

    res.status(201).json(createdOrder);
});

export { getPublicProducts, createCustomerOrder };